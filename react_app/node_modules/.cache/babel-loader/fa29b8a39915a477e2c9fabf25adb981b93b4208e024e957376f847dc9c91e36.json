{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\nimport thunk from \"redux-thunk\"; // Import thunk if you intend to use it\n\nconst reducer = combineReducers({\n  // Add your reducers here\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  // Add your initial states here\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\n\n// If using Redux Toolkit\nconst store = configureStore({\n  reducer,\n  preloadedState: initialState,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunk)\n});\nexport default store;","map":{"version":3,"names":["combineReducers","applyMiddleware","createStore","configureStore","userLoginReducer","userRegisterReducer","thunk","reducer","userLogin","userRegister","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","store","preloadedState","middleware","getDefaultMiddleware","concat"],"sources":["C:/Users/HP/Desktop/VS Code/In-Bang Website Project/react_app/src/store.js"],"sourcesContent":["import { combineReducers, applyMiddleware, createStore } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\r\nimport thunk from \"redux-thunk\"; // Import thunk if you intend to use it\r\n\r\nconst reducer = combineReducers({\r\n  // Add your reducers here\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  // Add your initial states here\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\n// If using Redux Toolkit\r\nconst store = configureStore({\r\n  reducer,\r\n  preloadedState: initialState,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACrE,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,yBAAyB;AAC/E,OAAOC,KAAK,MAAM,aAAa,CAAC,CAAC;;AAEjC,MAAMC,OAAO,GAAGP,eAAe,CAAC;EAC9B;EACAQ,SAAS,EAAEJ,gBAAgB;EAC3BK,YAAY,EAAEJ;AAChB,CAAC,CAAC;AAEF,MAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMG,YAAY,GAAG;EACnB;EACAP,SAAS,EAAE;IAAEQ,QAAQ,EAAEN;EAAoB;AAC7C,CAAC;;AAED;AACA,MAAMO,KAAK,GAAGd,cAAc,CAAC;EAC3BI,OAAO;EACPW,cAAc,EAAEH,YAAY;EAC5BI,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACf,KAAK;AAC3E,CAAC,CAAC;AAEF,eAAeW,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}